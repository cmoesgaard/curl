.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.TH carl_share_init 3 "8 Aug 2003" "libcarl 7.10.7" "libcarl Manual"
.SH NAME
carl_share_init - Create a shared object
.SH SYNOPSIS
.B #include <carl/carl.h>
.sp
.BI "CARLSH *carl_share_init( );"
.ad
.SH DESCRIPTION
This function returns a CARLSH handle to be used as input to all the other
share-functions, sometimes referred to as a share handle in some places in the
documentation. This init call MUST have a corresponding call to
\fIcarl_share_cleanup\fP when all operations using the share are complete.

This \fIshare handle\fP is what you pass to carl using the
\fICARLOPT_SHARE(3)\fP option with \fIcarl_easy_setopt(3)\fP, to make that
specific carl handle use the data in this share.
.SH RETURN VALUE
If this function returns NULL, something went wrong (out of memory, etc.)
and therefore the share object was not created.
.SH "SEE ALSO"
.BR carl_share_cleanup "(3), " carl_share_setopt "(3)"
