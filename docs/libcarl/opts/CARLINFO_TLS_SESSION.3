.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLINFO_TLS_SESSION 3 "12 Sep 2015" "libcarl 7.44.0" "carl_easy_getinfo options"
.SH NAME
CARLINFO_TLS_SESSION \- get TLS session info
.SH SYNOPSIS
.nf
#include <carl/carl.h>

CARLcode carl_easy_getinfo(CARL *handle, CARLINFO_TLS_SESSION,
                           struct carl_tlssessioninfo **session);
.SH DESCRIPTION
\fBThis option has been superseded\fP by \fICARLINFO_TLS_SSL_PTR(3)\fP which
was added in 7.48.0. The only reason you would use this option instead is if
you could be using a version of libcarl earlier than 7.48.0.

This option is exactly the same as \fICARLINFO_TLS_SSL_PTR(3)\fP except in the
case of OpenSSL. If the session \fIbackend\fP is CARLSSLBACKEND_OPENSSL the
session \fIinternals\fP pointer varies depending on the option:

CARLINFO_TLS_SESSION OpenSSL session \fIinternals\fP is SSL_CTX *.

CARLINFO_TLS_SSL_PTR OpenSSL session \fIinternals\fP is SSL *.

You can obtain an SSL_CTX pointer from an SSL pointer using OpenSSL function
SSL_get_SSL_CTX. Therefore unless you need compatibility with older versions of
libcarl use \fICARLINFO_TLS_SSL_PTR(3)\fP. Refer to that document for more
information.
.SH PROTOCOLS
All TLS-based
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  CARLcode res;
  struct carl_tlssessioninfo *tls;
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");
  res = carl_easy_perform(carl);
  carl_easy_getinfo(carl, CARLINFO_TLS_SESSION, &tls);
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Added in 7.34.0, and supported OpenSSL, GnuTLS, NSS and gskit only up until
7.48.0 was released.
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR carl_easy_getinfo "(3), " carl_easy_setopt "(3), "
.BR CARLINFO_TLS_SSL_PTR "(3), "
