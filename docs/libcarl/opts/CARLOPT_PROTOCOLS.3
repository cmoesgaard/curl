.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_PROTOCOLS 3 "19 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_PROTOCOLS \- set allowed protocols
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_PROTOCOLS, long bitmask);
.SH DESCRIPTION
Pass a long that holds a bitmask of CARLPROTO_* defines. If used, this bitmask
limits what protocols libcarl may use in the transfer. This allows you to have
a libcarl built to support a wide range of protocols but still limit specific
transfers to only be allowed to use a subset of them. By default libcarl will
accept all protocols it supports (\fICARLPROTO_ALL\fP). See also
\fICARLOPT_REDIR_PROTOCOLS(3)\fP.

These are the available protocol defines:
.nf
CARLPROTO_DICT
CARLPROTO_FILE
CARLPROTO_FTP
CARLPROTO_FTPS
CARLPROTO_GOPHER
CARLPROTO_HTTP
CARLPROTO_HTTPS
CARLPROTO_IMAP
CARLPROTO_IMAPS
CARLPROTO_LDAP
CARLPROTO_LDAPS
CARLPROTO_POP3
CARLPROTO_POP3S
CARLPROTO_RTMP
CARLPROTO_RTMPE
CARLPROTO_RTMPS
CARLPROTO_RTMPT
CARLPROTO_RTMPTE
CARLPROTO_RTMPTS
CARLPROTO_RTSP
CARLPROTO_SCP
CARLPROTO_SFTP
CARLPROTO_SMB
CARLPROTO_SMBS
CARLPROTO_SMTP
CARLPROTO_SMTPS
CARLPROTO_TELNET
CARLPROTO_TFTP
.fi
.SH DEFAULT
All protocols built-in
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
carl = carl_easy_init();
if(carl) {
  /* pass in the URL from an external source */
  carl_easy_setopt(carl, CARLOPT_URL, argv[1]);

  /* only allow HTTP, TFTP and SFTP */
  carl_easy_setopt(carl, CARLOPT_PROTOCOLS,
                   CARLPROTO_HTTP | CARLPROTO_TFTP | CARLPROTO_SFTP);

  /* Perform the request */
  carl_easy_perform(carl);
}
.fi
.SH AVAILABILITY
Added in 7.19.4
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CARLOPT_REDIR_PROTOCOLS "(3), " CARLOPT_URL "(3), "
