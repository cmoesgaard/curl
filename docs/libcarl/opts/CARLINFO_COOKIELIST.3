.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLINFO_COOKIELIST 3 "1 Sep 2015" "libcarl 7.44.0" "carl_easy_getinfo options"
.SH NAME
CARLINFO_COOKIELIST \- get all known cookies
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_getinfo(CARL *handle, CARLINFO_COOKIELIST,
                           struct carl_slist **cookies);
.SH DESCRIPTION
Pass a pointer to a 'struct carl_slist *' to receive a linked-list of all
cookies carl knows (expired ones, too). Don't forget to call
\fIcarl_slist_free_all(3)\fP on the list after it has been used.  If there are
no cookies (cookies for the handle have not been enabled or simply none have
been received) 'struct carl_slist *' will be set to point to NULL.

Since 7.43.0 cookies that were imported in the Set-Cookie format without a
domain name are not exported by this option.
.SH PROTOCOLS
HTTP(S)
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");

  /* enable the cookie engine */
  carl_easy_setopt(carl, CARLOPT_COOKIEFILE, "");

  res = carl_easy_perform(carl);

  if(!res) {
    /* extract all known cookies */
    struct carl_slist *cookies = NULL;
    res = carl_easy_getinfo(carl, CARLINFO_COOKIELIST, &cookies);
    if(!res && cookies) {
      /* a linked list of cookies in cookie file format */
      struct carl_slist *each = cookies;
      while(each) {
        printf("%s\\n", each->data);
        each = each->next;
      }
      /* we must free these cookies when we're done */
      carl_slist_free_all(cookies);
    }
  }
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Added in 7.14.1
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR carl_easy_getinfo "(3), " carl_easy_setopt "(3), "
.BR CARLOPT_COOKIELIST "(3), "
