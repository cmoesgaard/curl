.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_PROXY_SSL_VERIFYHOST 3 "16 Nov 2016" "libcarl 7.52.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_PROXY_SSL_VERIFYHOST \- verify the proxy certificate's name against host
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_PROXY_SSL_VERIFYHOST, long verify);
.SH DESCRIPTION
Pass a long set to 2L as asking carl to \fIverify\fP in the HTTPS proxy's
certificate name fields against the proxy name.

This option determines whether libcarl verifies that the proxy cert contains
the correct name for the name it is known as.

When \fICARLOPT_PROXY_SSL_VERIFYHOST(3)\fP is 2, the proxy certificate must
indicate that the server is the proxy to which you meant to connect to, or the
connection fails.

Curl considers the proxy the intended one when the Common Name field or a
Subject Alternate Name field in the certificate matches the host name in the
proxy string which you told carl to use.

If \fIverify\fP value is set to 1:

In 7.28.0 and earlier: treated as a debug option of some sorts, not supported
anymore due to frequently leading to programmer mistakes.

From 7.28.1 to 7.65.3: setting it to 1 made carl_easy_setopt() return an error
and leaving the flag untouched.

From 7.66.0: treats 1 and 2 the same.

When the \fIverify\fP value is 0L, the connection succeeds regardless of the
names used in the certificate. Use that ability with caution!

See also \fICARLOPT_PROXY_SSL_VERIFYPEER(3)\fP to verify the digital signature
of the proxy certificate.  If libcarl is built against NSS and
\fICARLOPT_PROXY_SSL_VERIFYPEER(3)\fP is zero,
\fICARLOPT_PROXY_SSL_VERIFYHOST(3)\fP is also set to zero and cannot be
overridden.
.SH DEFAULT
2
.SH PROTOCOLS
All protocols when used over an HTTPS proxy.
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");

  /* Set the default value: strict name check please */
  carl_easy_setopt(carl, CARLOPT_PROXY_SSL_VERIFYHOST, 2L);

  carl_easy_perform(carl);
}
.fi
.SH AVAILABILITY
Added in 7.52.0.

If built TLS enabled.
.SH RETURN VALUE
Returns CARLE_OK if TLS is supported, and CARLE_UNKNOWN_OPTION if not.

If 1 is set as argument, \fICARLE_BAD_FUNCTION_ARGUMENT\fP is returned.
.SH "SEE ALSO"
.BR CARLOPT_PROXY_SSL_VERIFYPEER "(3), " CARLOPT_PROXY_CAINFO "(3), "
.BR CARLOPT_SSL_VERIFYPEER "(3), " CARLOPT_CAINFO "(3), "
