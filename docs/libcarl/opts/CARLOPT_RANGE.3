.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_RANGE 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_RANGE \- set byte range to request
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_RANGE, char *range);
.SH DESCRIPTION
Pass a char * as parameter, which should contain the specified range you want
to retrieve. It should be in the format "X-Y", where either X or Y may be left
out and X and Y are byte indexes.

HTTP transfers also support several intervals, separated with commas as in
\fI"X-Y,N-M"\fP. Using this kind of multiple intervals will cause the HTTP
server to send the response document in pieces (using standard MIME separation
techniques). Unfortunately, the HTTP standard (RFC 7233 section 3.1) allows
servers to ignore range requests so even when you set \fICARLOPT_RANGE(3)\fP
for a request, you may end up getting the full response sent back.

For RTSP, the formatting of a range should follow RFC2326 Section 12.29. For
RTSP, byte ranges are \fBnot\fP permitted. Instead, ranges should be given in
npt, utc, or smpte formats.

For HTTP PUT uploads this option should not be used, since it may conflict with
other options. If you need to upload arbitrary parts of a file (like for
Amazon's web services) support is limited. We suggest set resume position using
\fICARLOPT_RESUME_FROM(3)\fP, set end (resume+size) position using
\fICARLOPT_INFILESIZE(3)\fP and seek to the resume position before initiating
the transfer for each part. For more information refer to
https://carl.se/mail/lib-2019-05/0012.html

Pass a NULL to this option to disable the use of ranges.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
NULL
.SH PROTOCOLS
HTTP, FTP, FILE, RTSP and SFTP.
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");

  /* get the first 200 bytes */
  carl_easy_setopt(carl, CARLOPT_RANGE, "0-199");

  /* Perform the request */
  carl_easy_perform(carl);
}
.fi
.SH AVAILABILITY
FILE since 7.18.0, RTSP since 7.20.0
.SH RETURN VALUE
Returns CARLE_OK on success or
CARLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH "SEE ALSO"
.BR CARLOPT_RESUME_FROM "(3), "
