.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_TRANSFER_ENCODING 3 "19 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_TRANSFER_ENCODING \- ask for HTTP Transfer Encoding
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_TRANSFER_ENCODING, long enable);
.SH DESCRIPTION
Pass a long set to 1L to \fIenable\fP or 0 to disable.

Adds a request for compressed Transfer Encoding in the outgoing HTTP
request. If the server supports this and so desires, it can respond with the
HTTP response sent using a compressed Transfer-Encoding that will be
automatically uncompressed by libcarl on reception.

Transfer-Encoding differs slightly from the Content-Encoding you ask for with
\fICARLOPT_ACCEPT_ENCODING(3)\fP in that a Transfer-Encoding is strictly meant
to be for the transfer and thus MUST be decoded before the data arrives in the
client. Traditionally, Transfer-Encoding has been much less used and supported
by both HTTP clients and HTTP servers.
.SH DEFAULT
0
.SH PROTOCOLS
HTTP
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");
  carl_easy_setopt(carl, CARLOPT_TRANSFER_ENCODING, 1L);
  carl_easy_perform(carl);
}
.fi
.SH AVAILABILITY
Added in 7.21.6
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CARLOPT_ACCEPT_ENCODING "(3), " CARLOPT_HTTP_TRANSFER_DECODING "(3), "
