.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_FILETIME 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_FILETIME \- get the modification time of the remote resource
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_FILETIME, long gettime);
.SH DESCRIPTION
Pass a long. If it is 1, libcarl will attempt to get the modification time of
the remote document in this operation. This requires that the remote server
sends the time or replies to a time querying command. The
\fIcarl_easy_getinfo(3)\fP function with the \fICARLINFO_FILETIME(3)\fP
argument can be used after a transfer to extract the received time (if any).
.SH DEFAULT
0
.SH PROTOCOLS
HTTP, FTP, SFTP, FILE
.SH EXAMPLE
.nf
carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, url);
  /* Ask for filetime */
  carl_easy_setopt(carl, CARLOPT_FILETIME, 1L);
  res = carl_easy_perform(carl);
  if(CARLE_OK == res) {
    res = carl_easy_getinfo(carl, CARLINFO_FILETIME, &filetime);
    if((CARLE_OK == res) && (filetime >= 0)) {
      time_t file_time = (time_t)filetime;
      printf("filetime %s: %s", filename, ctime(&file_time));
    }
  }
  /* always cleanup */
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Always, for SFTP since 7.49.0
.SH RETURN VALUE
Returns CARLE_OK
.SH "SEE ALSO"
.BR carl_easy_getinfo "(3), "
