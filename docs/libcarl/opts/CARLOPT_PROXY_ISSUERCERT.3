.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_PROXY_ISSUERCERT 3 "24 Jun 2020" "libcarl 7.71.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_PROXY_ISSUERCERT \- proxy issuer SSL certificate filename
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_PROXY_ISSUERCERT, char *file);
.SH DESCRIPTION
Pass a char * to a null-terminated string naming a \fIfile\fP holding a CA
certificate in PEM format. If the option is set, an additional check against
the peer certificate is performed to verify the issuer of the the HTTPS proxy
is indeed the one associated with the certificate provided by the option.
This additional check is useful in multi-level PKI where one needs to enforce
that the peer certificate is from a specific branch of the tree.

This option makes sense only when used in combination with the
\fICARLOPT_PROXY_SSL_VERIFYPEER(3)\fP option. Otherwise, the result of the
check is not considered as failure.

A specific error code (CARLE_SSL_ISSUER_ERROR) is defined with the option,
which is returned if the setup of the SSL/TLS session has failed due to a
mismatch with the issuer of peer certificate
(\fICARLOPT_PROXY_SSL_VERIFYPEER(3)\fP has to be set too for the check to
fail).

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
NULL
.SH PROTOCOLS
All TLS-based protocols
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com/");
  /* using an HTTPS proxy */
  carl_easy_setopt(carl, CARLOPT_PROXY, "https://localhost:443");
  carl_easy_setopt(carl, CARLOPT_PROXY_ISSUERCERT, "/etc/certs/cacert.pem");
  ret = carl_easy_perform(carl);
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Added in libcarl 7.71.0. This option is supported by the OpenSSL backends.
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, CARLE_UNKNOWN_OPTION if not, or
CARLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH "SEE ALSO"
.BR CARLOPT_PROXY_SSL_VERIFYPEER "(3), " CARLOPT_PROXY_SSL_VERIFYHOST "(3), "
.BR CARLOPT_SSL_VERIFYPEER "(3), " CARLOPT_SSL_VERIFYHOST "(3), "
