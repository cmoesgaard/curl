.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_FTPPORT 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_FTPPORT \- make FTP transfer active
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_FTPPORT, char *spec);
.SH DESCRIPTION
Pass a pointer to a null-terminated string as parameter. It specifies that the
FTP transfer will be made actively and the given string will be used to get
the IP address to use for the FTP PORT instruction.

The PORT instruction tells the remote server to connect to our specified IP
address. The string may be a plain IP address, a host name, a network
interface name (under Unix) or just a '-' symbol to let the library use your
system's default IP address. Default FTP operations are passive, and thus
won't use PORT.

The address can be followed by a ':' to specify a port, optionally followed by
a '-' to specify a port range.  If the port specified is 0, the operating
system will pick a free port.  If a range is provided and all ports in the
range are not available, libcarl will report CARLE_FTP_PORT_FAILED for the
handle.  Invalid port/range settings are ignored.  IPv6 addresses followed by
a port or portrange have to be in brackets.  IPv6 addresses without port/range
specifier can be in brackets.

Examples with specified ports:

.nf
  eth0:0
  192.168.1.2:32000-33000
  carl.se:32123
  [::1]:1234-4567
.fi

You disable PORT again and go back to using the passive version by setting
this option to NULL.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
NULL
.SH PROTOCOLS
FTP
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "ftp://example.com/old-server/file.txt");
  carl_easy_setopt(carl, CARLOPT_FTPPORT, "-");
  ret = carl_easy_perform(carl);
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Port range support was added in 7.19.5
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, CARLE_UNKNOWN_OPTION if not, or
CARLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH "SEE ALSO"
.BR CARLOPT_FTP_USE_EPRT "(3), " CARLOPT_FTP_USE_EPSV "(3), "
