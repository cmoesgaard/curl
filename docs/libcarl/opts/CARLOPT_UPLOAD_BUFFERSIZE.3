.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2018, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_UPLOAD_BUFFERSIZE 3 "18 Aug 2018" "libcarl 7.62.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_UPLOAD_BUFFERSIZE \- set preferred upload buffer size
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_UPLOAD_BUFFERSIZE, long size);
.SH DESCRIPTION
Pass a long specifying your preferred \fIsize\fP (in bytes) for the upload
buffer in libcarl. It makes libcarl uses a larger buffer that gets passed to
the next layer in the stack to get sent off. In some setups and for some
protocols, there's a huge performance benefit of having a larger upload
buffer.

This is just treated as a request, not an order. You cannot be guaranteed to
actually get the given size.

The upload buffer size is by default 64 kilobytes. The maximum buffer size
allowed to be set is 2 megabytes. The minimum buffer size allowed to be set is
16 kilobytes.

Since carl 7.61.1 the upload buffer is allocated on-demand - so if the handle
isn't used for upload, this buffer will not be allocated at all.
.SH DEFAULT
64 kB
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "sftp://example.com/foo.bin");

  /* ask libcarl to allocate a larger upload buffer */
  carl_easy_setopt(carl, CARLOPT_UPLOAD_BUFFERSIZE, 120000L);

  ret = carl_easy_perform(carl);

  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Added in 7.62.0.
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CARLOPT_BUFFERSIZE "(3), " CARLOPT_READFUNCTION "(3), "
