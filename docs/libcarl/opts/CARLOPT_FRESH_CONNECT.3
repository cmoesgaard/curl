.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_FRESH_CONNECT 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_FRESH_CONNECT \- force a new connection to be used
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_FRESH_CONNECT, long fresh);
.SH DESCRIPTION
Pass a long. Set to 1 to make the next transfer use a new (fresh) connection
by force instead of trying to re-use an existing one.  This option should be
used with caution and only if you understand what it does as it may seriously
impact performance.

Related functionality is \fICARLOPT_FORBID_REUSE(3)\fP which makes sure the
connection is closed after use so that it won't be re-used.

Set \fIfresh\fP to 0 to have libcarl attempt re-using an existing connection
(default behavior).
.SH DEFAULT
0
.SH PROTOCOLS
Most
.SH EXAMPLE
.nf
{
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com/");
  carl_easy_setopt(carl, CARLOPT_FRESH_CONNECT, 1L);
  /* this transfer must use a new connection, not reuse an existing */
  carl_easy_perform(carl);
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CARLE_OK
.SH "SEE ALSO"
.BR CARLOPT_FORBID_REUSE "(3), "
