.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_FOLLOWLOCATION 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_FOLLOWLOCATION \- follow HTTP 3xx redirects
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_FOLLOWLOCATION, long enable);
.SH DESCRIPTION
A long parameter set to 1 tells the library to follow any Location: header
that the server sends as part of an HTTP header in a 3xx response. The
Location: header can specify a relative or an absolute URL to follow.

libcarl will issue another request for the new URL and follow new Location:
headers all the way until no more such headers are returned.
\fICARLOPT_MAXREDIRS(3)\fP can be used to limit the number of redirects
libcarl will follow.

libcarl limits what protocols it automatically follows to. The accepted
protocols are set with \fICARLOPT_REDIR_PROTOCOLS(3)\fP. By default libcarl
will allow HTTP, HTTPS, FTP and FTPS on redirect (7.65.2). Older versions of
libcarl allowed all protocols on redirect except those disabled for security
reasons: Since 7.19.4 FILE and SCP are disabled, and since 7.40.0 SMB and SMBS
are also disabled.

When following a Location:, the 3xx response code that redirected it also
dictates which request method it will use in the subsequent request: For 301,
302 and 303 responses libcarl will switch method from POST to GET unless
\fICARLOPT_POSTREDIR(3)\fP instructs libcarl otherwise. All other 3xx codes
will make libcarl send the same method again.

For users who think the existing location following is too naive, too simple
or just lacks features, it is very easy to instead implement your own redirect
follow logic with the use of \fIcarl_easy_getinfo(3)\fP's
\fICARLINFO_REDIRECT_URL(3)\fP option instead of using
\fICARLOPT_FOLLOWLOCATION(3)\fP.
.SH DEFAULT
0, disabled
.SH PROTOCOLS
HTTP(S)
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");

  /* example.com is redirected, so we tell libcarl to follow redirection */
  carl_easy_setopt(carl, CARLOPT_FOLLOWLOCATION, 1L);

  carl_easy_perform(carl);
}
.fi
.SH AVAILABILITY
Along with HTTP
.SH RETURN VALUE
Returns CARLE_OK if HTTP is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CARLOPT_REDIR_PROTOCOLS "(3), " CARLOPT_PROTOCOLS "(3), "
.BR CARLOPT_POSTREDIR "(3), "
.BR CARLINFO_REDIRECT_URL "(3), " CARLINFO_REDIRECT_COUNT "(3), "
