.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_MAIL_RCPT 3 "19 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_MAIL_RCPT \- list of SMTP mail recipients
.SH SYNOPSIS
.nf
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_MAIL_RCPT,
                          struct carl_slist *rcpts);
.SH DESCRIPTION
Pass a pointer to a linked list of recipients to pass to the server in your
SMTP mail request. The linked list should be a fully valid list of
\fBstruct carl_slist\fP structs properly filled in. Use
\fIcarl_slist_append(3)\fP to create the list and \fIcarl_slist_free_all(3)\fP
to clean up an entire list.

When performing a mail transfer, each recipient should be specified within a
pair of angled brackets (<>), however, should you not use an angled bracket as
the first character libcarl will assume you provided a single email address
and enclose that address within brackets for you.

When performing an address verification (VRFY command), each recipient should
be specified as the user name or user name and domain (as per Section 3.5 of
RFC5321).

When performing a mailing list expand (EXPN command), each recipient should be
specified using the mailing list name, such as "Friends" or "London-Office".
.SH DEFAULT
NULL
.SH PROTOCOLS
SMTP
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  struct carl_slist *list;
  list = carl_slist_append(NULL, "root@localhost");
  list = carl_slist_append(list, "person@example.com");
  carl_easy_setopt(carl, CARLOPT_URL, "smtp://example.com/");
  carl_easy_setopt(carl, CARLOPT_MAIL_RCPT, list);
  ret = carl_easy_perform(carl);
  carl_slist_free_all(list);
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Added in 7.20.0. The VRFY and EXPN logic was added in 7.34.0
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CARLOPT_MAIL_FROM "(3), " CARLOPT_MAIL_AUTH "(3), "
