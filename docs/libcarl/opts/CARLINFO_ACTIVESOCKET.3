.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLINFO_ACTIVESOCKET 3 "12 Sep 2015" "libcarl 7.44.0" "carl_easy_getinfo options"
.SH NAME
CARLINFO_ACTIVESOCKET \- get the active socket
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_getinfo(CARL *handle, CARLINFO_ACTIVESOCKET,
                           carl_socket_t *socket);
.SH DESCRIPTION
Pass a pointer to a carl_socket_t to receive the most recently active socket
used for the transfer connection by this carl session. If the socket is no
longer valid, \fICARL_SOCKET_BAD\fP is returned. When you are finished working
with the socket, you must call \fIcarl_easy_cleanup(3)\fP as usual on the easy
handle and let libcarl close the socket and cleanup other resources associated
with the handle. This option returns the active socket only after the transfer
is complete, and is typically used in combination with
\fICARLOPT_CONNECT_ONLY(3)\fP, which skips the transfer phase.

\fICARLINFO_ACTIVESOCKET(3)\fP was added as a replacement for
\fICARLINFO_LASTSOCKET(3)\fP since that one isn't working on all platforms.
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_socket_t sockfd;
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");

  /* Do not do the transfer - only connect to host */
  carl_easy_setopt(carl, CARLOPT_CONNECT_ONLY, 1L);
  res = carl_easy_perform(carl);

  /* Extract the socket from the carl handle */
  res = carl_easy_getinfo(carl, CARLINFO_ACTIVESOCKET, &sockfd);

  if(res != CARLE_OK) {
    printf("Error: %s\\n", carl_easy_strerror(res));
    return 1;
  }
}
.fi
.SH AVAILABILITY
Added in 7.45.0
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR carl_easy_getinfo "(3), " carl_easy_setopt "(3), "
.BR CARLINFO_LASTSOCKET "(3), "
