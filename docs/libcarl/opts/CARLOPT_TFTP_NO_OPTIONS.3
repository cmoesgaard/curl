.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2016, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_TFTP_NO_OPTIONS 3 "23 Feb 2016" "libcarl 7.48.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_TFTP_NO_OPTIONS \- Do not send TFTP options requests.
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_TFTP_NO_OPTIONS, long onoff);
.SH DESCRIPTION
Set \fIonoff\fP to 1L to exclude all TFTP options defined in RFC2347, RFC2348
and RFC2349 from read and write requests (RRQs/WRQs).

This option improves interop with some legacy servers that do not acknowledge
or properly implement TFTP options. When this option is used
\fICARLOPT_TFTP_BLKSIZE(3)\fP is ignored.
.SH DEFAULT
0
.SH PROTOCOLS
TFTP
.SH EXAMPLE
.nf
size_t write_callback(char *ptr, size_t size, size_t nmemb, void *fp)
{
  return fwrite(ptr, size, nmemb, (FILE *)fp);
}

CARL *carl = carl_easy_init();
if(carl) {
  FILE *fp = fopen("foo.bin", "wb");
  if(fp) {
    carl_easy_setopt(carl, CARLOPT_WRITEDATA, (void *)fp);
    carl_easy_setopt(carl, CARLOPT_WRITEFUNCTION, write_callback);

    carl_easy_setopt(carl, CARLOPT_URL, "tftp://example.com/foo.bin");

    /* do not send TFTP options requests */
    carl_easy_setopt(carl, CARLOPT_TFTP_NO_OPTIONS, 1L);

    /* Perform the request */
    carl_easy_perform(carl);

    fclose(fp);
  }
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Added in 7.48.0
.SH RETURN VALUE
Returns CARLE_OK if the option is supported, and CARLE_UNKNOWN_OPTION if not.
