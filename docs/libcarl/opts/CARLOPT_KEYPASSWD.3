.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_KEYPASSWD 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_KEYPASSWD \- set passphrase to private key
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_KEYPASSWD, char *pwd);
.SH DESCRIPTION
Pass a pointer to a null-terminated string as parameter. It will be used as
the password required to use the \fICARLOPT_SSLKEY(3)\fP or
\fICARLOPT_SSH_PRIVATE_KEYFILE(3)\fP private key.  You never needed a pass
phrase to load a certificate but you need one to load your private key.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
NULL
.SH PROTOCOLS
All TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com/foo.bin");
  carl_easy_setopt(carl, CARLOPT_SSLCERT, "client.pem");
  carl_easy_setopt(carl, CARLOPT_SSLKEY, "key.pem");
  carl_easy_setopt(carl, CARLOPT_KEYPASSWD, "superman");
  ret = carl_easy_perform(carl);
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
This option was known as CARLOPT_SSLKEYPASSWD up to 7.16.4 and
CARLOPT_SSLCERTPASSWD up to 7.9.2.
.SH RETURN VALUE
Returns CARLE_OK if TLS enabled, CARLE_UNKNOWN_OPTION if not, or
CARLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH "SEE ALSO"
.BR CARLOPT_SSLKEY "(3), " CARLOPT_SSH_PRIVATE_KEYFILE "(3), "
