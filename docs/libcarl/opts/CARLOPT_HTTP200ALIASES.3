.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_HTTP200ALIASES 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_HTTP200ALIASES \- specify alternative matches for HTTP 200 OK
.SH SYNOPSIS
.nf
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_HTTP200ALIASES,
                          struct carl_slist *aliases);
.SH DESCRIPTION
Pass a pointer to a linked list of \fIaliases\fP to be treated as valid HTTP
200 responses.  Some servers respond with a custom header response line.  For
example, SHOUTcast servers respond with "ICY 200 OK". Also some very old
Icecast 1.3.x servers will respond like that for certain user agent headers or
in absence of such. By including this string in your list of aliases,
the response will be treated as a valid HTTP header line such as
"HTTP/1.0 200 OK".

The linked list should be a fully valid list of struct carl_slist structs, and
be properly filled in.  Use \fIcarl_slist_append(3)\fP to create the list and
\fIcarl_slist_free_all(3)\fP to clean up an entire list.

The alias itself is not parsed for any version strings. The protocol is
assumed to match HTTP 1.0 when an alias match.
.SH DEFAULT
NULL
.SH PROTOCOLS
HTTP
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  struct carl_slist *list;
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com");

  list = carl_slist_append(NULL, "ICY 200 OK");
  list = carl_slist_append(list, "WEIRDO 99 FINE");

  carl_easy_setopt(carl, CARLOPT_HTTP200ALIASES, list);
  carl_easy_perform(carl);
  carl_slist_free_all(list); /* free the list again */
}
.fi
.SH AVAILABILITY
Added in 7.10.3
.SH RETURN VALUE
Returns CARLE_OK if HTTP is supported, and CARLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CARLOPT_HTTP_VERSION "(3), "
