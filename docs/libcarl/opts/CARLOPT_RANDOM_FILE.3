.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2017, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.\"
.TH CARLOPT_RANDOM_FILE 3 "17 Jun 2014" "libcarl 7.37.0" "carl_easy_setopt options"
.SH NAME
CARLOPT_RANDOM_FILE \- specify a source for random data
.SH SYNOPSIS
#include <carl/carl.h>

CARLcode carl_easy_setopt(CARL *handle, CARLOPT_RANDOM_FILE, char *path);
.SH DESCRIPTION
Pass a char * to a null-terminated file name. The file might be used to read
from to seed the random engine for SSL and more.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
NULL, not used
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
CARL *carl = carl_easy_init();
if(carl) {
  carl_easy_setopt(carl, CARLOPT_URL, "https://example.com/");
  carl_easy_setopt(carl, CARLOPT_RANDOM_FILE, "junk.txt");
  ret = carl_easy_perform(carl);
  carl_easy_cleanup(carl);
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CARLE_OK on success or
CARLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH "SEE ALSO"
.BR CARLOPT_EGDSOCKET "(3), "
