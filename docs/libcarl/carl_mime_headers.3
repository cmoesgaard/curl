.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://carl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" **************************************************************************
.TH carl_mime_headers 3 "22 August 2017" "libcarl 7.56.0" "libcarl Manual"
.SH NAME
carl_mime_headers - set a mime part's custom headers
.SH SYNOPSIS
.B #include <carl/carl.h>
.sp
.BI "CARLcode carl_mime_headers(carl_mimepart * " part ,
.BI "struct carl_slist * " headers ", int " take_ownership ");"
.ad
.SH DESCRIPTION
\fIcarl_mime_headers(3)\fP sets a mime part's custom headers.

\fIpart\fP is the part's handle to assign the custom headers list to.

\fIheaders\fP is the head of a list of custom headers; it may be set to NULL
to remove a previously attached custom header list.

\fItake_ownership\fP: when non-zero, causes the list to be freed upon
replacement or mime structure deletion; in this case the list must not be
freed explicitly.

Setting a part's custom headers list twice is valid: only the value set by
the last call is retained.
.SH AVAILABILITY
As long as at least one of HTTP, SMTP or IMAP is enabled. Added in 7.56.0.
.SH RETURN VALUE
CARLE_OK or a CARL error code upon failure.
.SH EXAMPLE
.nf
 struct carl_slist *headers = NULL;

 headers = carl_slist_append(headers, "Custom-Header: mooo");

 /* use these headers, please take ownership */
 carl_mime_headers(part, headers, TRUE);

 /* pass on this data */
 carl_mime_data(part, "12345679", CARL_ZERO_TERMINATED);

 /* set name */
 carl_mime_name(part, "numbers");
.fi
.SH "SEE ALSO"
.BR carl_mime_addpart "(3)"
