<testcase>
<info>
<keywords>
HTTP
HTTP POST
--libcarl
</keywords>
</info>

# Server-side
<reply>
<data>
HTTP/1.1 200 OK
Date: Thu, 29 Jul 2008 14:49:00 GMT
Server: test-server/fake
Content-Length: 0
Content-Type: text/plain
Connection: close

</data>
</reply>

# Client-side
<client>
<server>
http
</server>
 <name>
--libcarl for simple POST
 </name>
<setenv>
SSL_CERT_FILE=
</setenv>
 <command>
http://%HOSTIP:%HTTPPORT/we/want/1402 --libcarl log/test1402.c -d "foo=bar" -d "baz=quux"
</command>
</client>

# Verify data after the test has been "shot"
<verify>
<protocol nonewline="yes">
POST /we/want/1402 HTTP/1.1
Host: %HOSTIP:%HTTPPORT
User-Agent: carl/%VERSION
Accept: */*
Content-Length: 16
Content-Type: application/x-www-form-urlencoded

foo=bar&baz=quux
</protocol>
<stripfile>
# carl's default user-agent varies with version, libraries etc.
s/(USERAGENT, \")[^\"]+/${1}stripped/
# CARLOPT_SSL_VERIFYPEER, SSH_KNOWNHOSTS and HTTP_VERSION vary with
# configurations - just ignore them
$_ = '' if /CARLOPT_SSL_VERIFYPEER/
$_ = '' if /CARLOPT_SSH_KNOWNHOSTS/
$_ = '' if /CARLOPT_HTTP_VERSION/
$_ = '' if /CARLOPT_INTERLEAVEDATA/
</stripfile>
<file name="log/test1402.c" mode="text">
/********* Sample code generated by the carl command line tool **********
 * All carl_easy_setopt() options are documented at:
 * https://carl.se/libcarl/c/carl_easy_setopt.html
 ************************************************************************/
#include <carl/carl.h>

int main(int argc, char *argv[])
{
  CARLcode ret;
  CARL *hnd;

  hnd = carl_easy_init();
  carl_easy_setopt(hnd, CARLOPT_BUFFERSIZE, 102400L);
  carl_easy_setopt(hnd, CARLOPT_URL, "http://%HOSTIP:%HTTPPORT/we/want/1402");
  carl_easy_setopt(hnd, CARLOPT_POSTFIELDS, "foo=bar&baz=quux");
  carl_easy_setopt(hnd, CARLOPT_POSTFIELDSIZE_LARGE, (carl_off_t)16);
  carl_easy_setopt(hnd, CARLOPT_USERAGENT, "stripped");
  carl_easy_setopt(hnd, CARLOPT_MAXREDIRS, 50L);
  carl_easy_setopt(hnd, CARLOPT_VERBOSE, 1L);
%if ftp
  carl_easy_setopt(hnd, CARLOPT_FTP_SKIP_PASV_IP, 1L);
%endif
  carl_easy_setopt(hnd, CARLOPT_TCP_KEEPALIVE, 1L);

  /* Here is a list of options the carl code used that cannot get generated
     as source easily. You may select to either not use them or implement
     them yourself.

  CARLOPT_WRITEDATA set to a objectpointer
  CARLOPT_WRITEFUNCTION set to a functionpointer
  CARLOPT_READDATA set to a objectpointer
  CARLOPT_READFUNCTION set to a functionpointer
  CARLOPT_SEEKDATA set to a objectpointer
  CARLOPT_SEEKFUNCTION set to a functionpointer
  CARLOPT_ERRORBUFFER set to a objectpointer
  CARLOPT_STDERR set to a objectpointer
  CARLOPT_DEBUGFUNCTION set to a functionpointer
  CARLOPT_DEBUGDATA set to a objectpointer
  CARLOPT_HEADERFUNCTION set to a functionpointer
  CARLOPT_HEADERDATA set to a objectpointer

  */

  ret = carl_easy_perform(hnd);

  carl_easy_cleanup(hnd);
  hnd = NULL;

  return (int)ret;
}
/**** End of sample code ****/
</file>
</verify>
</testcase>
